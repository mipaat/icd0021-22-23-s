@using Base.WebHelpers
@using App.Common.Enums
@using Utils
@using WebApp.Controllers
@using WebApp.ViewModels
@model WebApp.ViewModels.VideoViewModel

@{
    ViewBag.Title = $"Video - {Model.Video.Title}";
}

@if (VideoCanBeEmbedded)
{
    <a asp-action="Watch" asp-route-id="@Model.Video.Id" asp-route-embedView="@(!Model.EmbedView)">@(Model.EmbedView ? "View archived version" : "View on platform")</a>
}
<div>
    @if (ShowEmbedView)
    {
        <iframe width="560" height="315" src="@(Model.Video.EmbedUrl ?? Model.Video.Url)" title="@Model.Video.Platform video player" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    }
    else
    {
        <video controls width="560" height="315">
            <source src="/api/v1/File/VideoFile/@Model.Video.Id"/>
        </video>
    }
</div>

<a asp-controller="Category" asp-action="ManageEntityCategories" asp-route-id="@Model.Video.Id" asp-route-entityType="@EEntityType.Video" asp-route-returnUrl="@Context.GetFullPath()">Manage categories</a>

<partial name="_AuthorSummaryPartial" model="Model.Video.Author"/>

<h1>@Model.Video.Title</h1>

<div>
    <div>@Model.Video.</div>
    <p>@Html.ToLineBreaks(Model.Video.Description)</p>
</div>

<div>
    <h4>Comments</h4>
    Comments on platform: @Model.Video.CommentCount Archived root comments: @Model.Video.ArchivedRootCommentCount Archived total comments: @Model.Video.ArchivedCommentCount
    <partial name="_PaginationUiPartial" model="@PaginationViewModel"/>
    @foreach (var comment in Model.Video.Comments)
    {
        <partial name="_CommentPartial" model="@comment"/>
    }
</div>

@functions
{
    bool VideoCanBeEmbedded => Model.Video.EmbedUrl != null || Model.Video.Url != null;
    bool ShowEmbedView => Model.EmbedView && VideoCanBeEmbedded;

    PaginationUiPartialViewModel PaginationViewModel => new()
    {
        ControllerName = nameof(VideoController),
        ActionName = nameof(VideoController.Watch),
        RouteValues = new { Model.Video.Id, Model.EmbedView },
        LimitParamName = nameof(Model.CommentsLimit),
        PageParamName = nameof(Model.CommentsPage),
        Limit = Model.CommentsLimit,
        Page = Model.CommentsPage,
        Total = Model.Video.ArchivedRootCommentCount,
        AmountOnPage = Model.Video.Comments.Count,
    };
}